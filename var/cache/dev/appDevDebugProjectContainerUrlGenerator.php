<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AbonnementsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/abonnements/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AbonnementsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/abonnements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AbonnementsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/abonnements/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AbonnementsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/abonnements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AbonnementsController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/abonnements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_demandes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AbonnementsController::demandesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/abonnements/demandes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_valider' => array (  0 =>   array (    0 => 'id',    1 => 'nb',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AbonnementsController::validerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/valider',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nb',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/admin/abonnements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'back_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_reclamations_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AdminReclamationsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/reclamations/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_reclamations_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AdminReclamationsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reclamations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_reclamations_refuser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AdminReclamationsController::refuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuser',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reclamations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_reclamations_accepter' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\AdminReclamationsController::accepterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accepter',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/reclamations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\SignalsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/signals',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show' => array (  0 =>   array (    0 => 'evennement',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\SignalsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    1 =>     array (      0 => 'text',      1 => '/admin/viewEv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consulter' => array (  0 =>   array (    0 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\SignalsController::consulterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'text',      1 => '/admin/viewAnc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_ev' => array (  0 =>   array (    0 => 'evennement',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\SignalsController::deleteEvAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    1 =>     array (      0 => 'text',      1 => '/admin/deleteEv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_anc' => array (  0 =>   array (    0 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\SignalsController::deleteAncAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'text',      1 => '/admin/deleteAnc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stats_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\StatsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/stats/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categories_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\CategoriesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/admin/categories/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categories_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\CategoriesController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/admin/categories/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categories_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\CategoriesController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/admin/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'categories_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\BackBundle\\Controller\\CategoriesController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/admin/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\UserBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'front_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReservationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservations/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReservationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReservationController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservations/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReservationController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReservationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamations_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReclamationsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamations/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamations_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReclamationsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reclamations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamations_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReclamationsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamations/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamations_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReclamationsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reclamations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamations_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ReclamationsController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reclamations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commandes_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\CommandesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commandes/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commandes_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\CommandesController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commandes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commandes_new' => array (  0 =>   array (    0 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\CommandesController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'text',      1 => '/commandes/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commandes_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\CommandesController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commandes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commandes_modif' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\CommandesController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commandes/modif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commandes_valid' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\CommandesController::validAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/valid',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commandes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commandes_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\CommandesController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commandes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_com_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ComAbonnementsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnements/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_com_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ComAbonnementsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnements/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_com_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ComAbonnementsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/abonnements/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'abonnements_com_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ComAbonnementsController::exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/abonnements/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf_show' => array (  0 =>   array (    0 => 'commande',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\PDFController::pdfshowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commande',    ),    1 =>     array (      0 => 'text',      1 => '/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annonces_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::newAnnonceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/annonces/newAnnonce',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annonces_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::editAnnonceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/annonces/editAnnonce',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annonces_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::deleteAnnonceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/annonces/deleteAnnonce',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commercial_annonces_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::indexCommercialAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/annonces/listeannoncesComm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'image_new' => array (  0 =>   array (    0 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\ImageController::newImageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'text',      1 => '/annonces/newAnnonce/newImage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'client_annonces_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/annonces/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annonces_index_by_categories' => array (  0 =>   array (    0 => 'categorie',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::listerbyCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'categorie',    ),    1 =>     array (      0 => 'text',      1 => '/annonces/categorie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annonces_index_by_categoriesDefault' => array (  0 =>   array (    0 => 'categorie',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\DefaultController::listeruserbyCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'categorie',    ),    1 =>     array (      0 => 'text',      1 => '/annonces/annonce/categorie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annonces_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/annonces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentairesAnc_new' => array (  0 =>   array (    0 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'text',      1 => '/annonces/annonce',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentairesAnc_delete' => array (  0 =>   array (    0 => 'com',    1 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::deleteComAncAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'com',    ),    2 =>     array (      0 => 'text',      1 => '/annonces/delete_com',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentairesAnc_edit' => array (  0 =>   array (    0 => 'com',    1 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\AnnoncesController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'com',    ),    2 =>     array (      0 => 'text',      1 => '/annonces/edit_com',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_inbox' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::inboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_sent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::sentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/sent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_deleted' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::deletedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/deleted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::newThreadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_delete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_undelete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::undeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/undelete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_view' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\MessageController::threadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    1 =>     array (      0 => 'text',      1 => '/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evennements_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/evennements/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evennements_parts' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::listeParAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/particiapants',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evennements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evennements_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evennements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evennements_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/evennements/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evennements_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evennements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evennements_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/evennements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentairesEvs_new' => array (  0 =>   array (    0 => 'evennement',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::newEvsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    1 =>     array (      0 => 'text',      1 => '/evennements/new_com',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentairesEvs_delete' => array (  0 =>   array (    0 => 'evennement',    1 => 'com',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::deleteComEvsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'com',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    2 =>     array (      0 => 'text',      1 => '/evennements/delete_com_Evs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentairesEvs_Edit' => array (  0 =>   array (    0 => 'com',    1 => 'evennement',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::editComEvsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'com',    ),    2 =>     array (      0 => 'text',      1 => '/evennements/edit_com_Evs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/evennements/commentaire/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'find_commentaire' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::findAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/evennements/commentaire/find',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_commentaire' => array (  0 =>   array (    0 => 'evennement',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\EvennementsController::newEvsSAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    1 =>     array (      0 => 'text',      1 => '/evennements/commentaire/new_Evs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'signalsAnc_all' => array (  0 =>   array (    0 => 'annonce',  ),  1 =>   array (    '_controller' => 'BackBundle:SignalsAnc:all',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'text',      1 => '/signalsAnc/signalsAnc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'signalEvs_delete' => array (  0 =>   array (    0 => 'signalAnc',    1 => 'sig',  ),  1 =>   array (    '_controller' => 'BackBundle:SignalsAnc:delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sig',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'signalAnc',    ),    2 =>     array (      0 => 'text',      1 => '/signalsAnc/delete_sig_Evs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'signalsEvs_all' => array (  0 =>   array (    0 => 'evennement',  ),  1 =>   array (    '_controller' => 'BackBundle:SignalsEvs:all',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    1 =>     array (      0 => 'text',      1 => '/signalsEvs/signalsEvs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'signalsEvsN_new' => array (  0 =>   array (    0 => 'evennement',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\SignalsEvsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evennement',    ),    1 =>     array (      0 => 'text',      1 => '/signalsEvs/signalsEvsN',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'signalsAncN_new' => array (  0 =>   array (    0 => 'annonce',  ),  1 =>   array (    '_controller' => 'Souk\\FrontBundle\\Controller\\SignalsAncController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    1 =>     array (      0 => 'text',      1 => '/signalsAnc/signalsAncN',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_User' => array (  0 =>   array (    0 => 'login',    1 => 'password',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\UserApiController::getUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'login',    ),    2 =>     array (      0 => 'text',      1 => '/api/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste_commandes' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommandesApiController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/commandes/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annuler_commande' => array (  0 =>   array (    0 => 'com',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommandesApiController::annulerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'com',    ),    1 =>     array (      0 => 'text',      1 => '/api/commandes/annuler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_commande' => array (  0 =>   array (    0 => 'com',    1 => 'date',    2 => 'quantite',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommandesApiController::modifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'quantite',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'date',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'com',    ),    3 =>     array (      0 => 'text',      1 => '/api/commandes/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'confirmer_commande' => array (  0 =>   array (    0 => 'com',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommandesApiController::confirmerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'com',    ),    1 =>     array (      0 => 'text',      1 => '/api/commandes/confirmer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_Annonces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\AnnoncesApiController::getAllAnnoncesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/annonces/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_Annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\AnnoncesApiController::GetAnnonceByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/annonces/AnnoncesById',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_Annonce' => array (  0 =>   array (    0 => 'commercial',    1 => 'prix',    2 => 'categorie',    3 => 'description',    4 => 'titre',    5 => 'filename',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\AnnoncesApiController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'filename',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'titre',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'description',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'categorie',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prix',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commercial',    ),    6 =>     array (      0 => 'text',      1 => '/api/annonces/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_Annonce' => array (  0 =>   array (    0 => 'idannonces',    1 => 'prix',    2 => 'description',    3 => 'titre',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\AnnoncesApiController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'titre',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'description',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prix',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idannonces',    ),    4 =>     array (      0 => 'text',      1 => '/api/annonces/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_Annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\AnnoncesApiController::supprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/annonces/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_image' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\ImageApiController::GetImageByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/getImageByIdAnnonce',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_liste_categorie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CategorieApiController::lstCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/categorie/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_reclamations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\ReclamationApiController::allRecAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/reclamations/allReclamations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste_reclamations' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\ReclamationApiController::listeRecAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/reclamations/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'new_reclamations' => array (  0 =>   array (    0 => 'contenu',    1 => 'commercial',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\ReclamationApiController::newRecAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commercial',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contenu',    ),    2 =>     array (      0 => 'text',      1 => '/api/reclamations/newR',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_reclamations' => array (  0 =>   array (    0 => 'rec',    1 => 'contenu',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\ReclamationApiController::editRecAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contenu',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'rec',    ),    2 =>     array (      0 => 'text',      1 => '/api/reclamations/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'accepter_reclamations' => array (  0 =>   array (    0 => 'rec',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\ReclamationApiController::accepterRecAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'rec',    ),    1 =>     array (      0 => 'text',      1 => '/api/reclamations/accepter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'rejeter_reclamations' => array (  0 =>   array (    0 => 'rec',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\ReclamationApiController::rejeterRecAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'rec',    ),    1 =>     array (      0 => 'text',      1 => '/api/reclamations/rejeter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste_commentaireAnc' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommentaireAncApiController::listeComAncAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/commentaire/commentaireAnc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_commentaireAnc' => array (  0 =>   array (    0 => 'annonce',    1 => 'contenu',    2 => 'client',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommentaireAncApiController::createComAncAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'client',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contenu',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'annonce',    ),    3 =>     array (      0 => 'text',      1 => '/api/commentaire/commentaireAnc/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_commentaireAnc' => array (  0 =>   array (    0 => 'comAnc',    1 => 'contenu',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommentaireAncApiController::modifComAncAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contenu',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comAnc',    ),    2 =>     array (      0 => 'text',      1 => '/api/commentaire/commentaireAnc/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_commentaireAnc' => array (  0 =>   array (    0 => 'comAnc',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\CommentaireAncApiController::deleteAncAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comAnc',    ),    1 =>     array (      0 => 'text',      1 => '/api/commentaire/commentaireAnc/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_All_Evenements' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\EvenementsApiController::getEventsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/evenements/allEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_All_Evenements_by_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\EvenementsApiController::getEventsbyUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/evenements/allEvents/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_All_Evenements_by_id' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\EvenementsApiController::getEventsbyIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/evenements/allEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_commande' => array (  0 =>   array (    0 => 'commercial',    1 => 'titre',    2 => 'prix',    3 => 'lieu',  ),  1 =>   array (    '_controller' => 'Souk\\ApiBundle\\Controller\\EvenementsApiController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lieu',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prix',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'titre',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commercial',    ),    4 =>     array (      0 => 'text',      1 => '/api/evenements/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
